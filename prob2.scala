/**
 * Even Fibonacci numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
*
*  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*
* By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*
**/
def fib : Stream[Int] = {
	def constructFib(start: Int, result: Int): Stream[Int] = start #:: constructFib(result, result + start)
	constructFib(1, 2)
}

//println(fib.takeWhile(x => (x < 4000000)).filter(y => y % 2 == 0).mkString(", "))
val result = fib.takeWhile(x => (x < 4000000)).filter(y => y % 2 == 0).foldLeft(0)(_ + _)
assert(result == 4613732)

